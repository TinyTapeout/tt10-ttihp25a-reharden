name: reharden

on:
  push:
  workflow_dispatch:

jobs:
  reharden-hdl:
    strategy:
      fail-fast: false
      matrix:
        project:
          - tt_um_10_vga_crossyroad
          - tt_um_2048_vga_game
          - tt_um_4_bit_ALU
          - tt_um_aditya_patra
          - tt_um_algofoogle_vga
          - tt_um_alphaonesoc
          - tt_um_asgerwenneb
          - tt_um_atomNPU
          - tt_um_bilal_trng
          - tt_um_bitty
          - tt_um_branch_pred
          - tt_um_brukstus_tdc_with_spi
          - tt_um_chip_rom
          - tt_um_DaDDS
          - tt_um_daobaanh_rng
          - tt_um_devmonk_ay8913
          - tt_um_drum_goekce
          - tt_um_enjens
          - tt_um_factory_test
          - tt_um_flummer_ltc
          - tt_um_gamepad_pmod_demo
          - tt_um_gcd_stephan
          - tt_um_gregac_tiny_nn
          - tt_um_gus16
          - tt_um_gxrii_spi_sevenseg
          - tt_um_hpdl1414_uart_atudoroi
          - tt_um_htfab_checkers
          - tt_um_huffman_coder
          - tt_um_i2c_regf
          - tt_um_iitbbs
          - tt_um_jp_cd101_saw
          - tt_um_jun1okamura_test0
          - tt_um_kch_cd101
          - tt_um_kentrane_tinyspectrum
          - tt_um_keszocze_ssmcl
          - tt_um_larva
          - tt_um_led_jellyant
          - tt_um_log_afpm
          - tt_um_luke_clock
          - tt_um_MAC_Accelerator_OnSachinSharma
          - tt_um_mattvenn_spi_test
          - tt_um_MichaelBell_tinyQV
          - tt_um_monishvr_fifo
          - tt_um_moody_mimosa
          - tt_um_mp_lif_schor
          - tt_um_multiplier
          - tt_um_nithishreddykvs
          - tt_um_obriensp_jtag
          - tt_um_ole_moller_priority_encoder_to_7_segment_decoder
          - tt_um_project
          - tt_um_Qwendu_spi_fpu
          - tt_um_reemashivva_fifo
          - tt_um_rejunity_ternary_dot
          - tt_um_rkarl_Spiral
          - tt_um_rte_sine_synth
          - tt_um_save_buffer_hash_table
          - tt_um_schoeberl_wildcat
          - tt_um_space_invaders_game
          - tt_um_spacewar
          - tt_um_spi_pwm_djuara
          - tt_um_strau0106_simple_viii
          - tt_um_Strider93
          - tt_um_sushi_demo
          - tt_um_synth_simple_mm
          - tt_um_tappu_tobias1012
          - tt_um_tetrap_triggerer
          - tt_um_tiny_shader_mole99
          - tt_um_tinytapeout_logo_screensaver
          - tt_um_toivoh_demo
          - tt_um_toniklippeo
          - tt_um_torurstrom_async_lock
          - tt_um_uart_bgdtanasa
          - tt_um_UartMain
          - tt_um_ultra_tiny_cpu
          - tt_um_urish_simon
          - tt_um_uwasic_dinogame
          - tt_um_vga_clock
          - tt_um_virantha_enigma
          - tt_um_wrapper
          - tt_um_xor_encryption
          - tt_um_z2a_rgb_mixer
          - tt_um_zedulo_spitest1
          - tt_um_zhouzhouthezhou_adder

    runs-on: ubuntu-24.04
    env:
      OPENLANE_IMAGE_OVERRIDE: htms/openlane2:ihp-v3.0.0.dev17
      PDK_ROOT: ${{ github.workspace }}/pdk
      PDK: ihp-sg13g2
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Checkout tt-support-tools repo
        uses: actions/checkout@v4
        with:
          repository: TinyTapeout/tt-support-tools
          path: hdl/${{ matrix.project }}/tt
          ref: ttihp25a

      - name: Checkout IHP PDK repo
        uses: actions/checkout@v4
        with:
          repository: TinyTapeout/IHP-Open-PDK
          ref: tt2025
          path: pdk

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        working-directory: hdl/${{ matrix.project }}
        run: |
          pip install -r tt/requirements.txt

      - name: Install ghdl
        uses: awalsh128/cache-apt-pkgs-action@v1.4.3
        with:
          packages: ghdl-llvm
          version: ttihp25a-reharden

      - name: Install OpenLane (IHP branch)
        shell: bash
        run: |
          pip install https://github.com/TinyTapeout/libparse-python/releases/download/0.3.1-dev1/libparse-0.3.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl
          pip install https://github.com/TinyTapeout/openlane2/releases/download/ihp-v3.0.0.dev17/openlane-3.0.0.dev17-py3-none-any.whl

      - name: Fetch verilog and build config
        working-directory: hdl/${{ matrix.project }}
        shell: bash
        run: ./tt/tt_tool.py --create-user-config --ihp

      - name: Make GDS with OpenLane
        working-directory: hdl/${{ matrix.project }}
        run: |
          git init
          # tt_tool requires a remote to be set, and some commit to be present
          git remote add origin https://github.com/TinyTapeout/dummy
          git config user.email "bot@github.com"
          git config user.name "Tiny Tapeout Bot"
          git commit --allow-empty -m "Dummy commit"

          python tt/tt_tool.py --create-user-config --harden --ihp

          # Fail if the final GDS file doesn't exist
          if [ ! -f "runs/wokwi/final/gds/${{ matrix.project }}.gds" ]; then
            exit 1
          fi

          # Fail is error.log isn't empty
          if [ -s "runs/wokwi/error.log" ]; then
            exit 1
          fi

      #- name: Publish build logs
      #  #if: success() || failure()
      #  uses: actions/upload-artifact@v4
      #  with:
      #    name: GDS_${{ matrix.project }}
      #    path: |
      #      hdl/${{ matrix.project }}/runs/*

      - name: Install KLayout
        shell: bash
        run: |
          wget https://github.com/TinyTapeout/klayout/releases/download/v0.29.11/klayout_0.29.11-1_amd64.deb
          sudo apt-get update && sudo apt-get install -y ./klayout_0.29.11-1_amd64.deb
          pip install klayout==0.29.11

      - name: Prepare tt_submission artifact
        working-directory: hdl/${{ matrix.project }}
        shell: bash
        run: |
          mkdir -p tt_submission/stats
          TOP_MODULE=$(./tt/tt_tool.py --print-top-module --ihp)
          cp runs/wokwi/final/commit_id.json tt_submission/
          cp runs/wokwi/final/{gds,lef,spef/*}/${TOP_MODULE}.* tt_submission/
          strm2oas tt_submission/${TOP_MODULE}.gds tt_submission/${TOP_MODULE}.oas
          if [ "$PDK" == "sky130A" ]; then
            cp runs/wokwi/final/pnl/${TOP_MODULE}.pnl.v tt_submission/${TOP_MODULE}.v
          else
            cp runs/wokwi/final/nl/${TOP_MODULE}.nl.v tt_submission/${TOP_MODULE}.v
          fi
          cp runs/wokwi/{OPENLANE_VERSION,PDK_SOURCES,resolved.json} tt_submission/
          cp runs/wokwi/final/metrics.csv tt_submission/stats/metrics.csv
          cp runs/wokwi/*-yosys-synthesis/reports/stat.rpt tt_submission/stats/synthesis-stats.txt

      - name: Publish tt_submission artifact
        uses: actions/upload-artifact@v4
        with:
          name: tt_submission_${{ matrix.project }}
          path: |
            hdl/${{ matrix.project }}/src/*
            hdl/${{ matrix.project }}/docs/*
            hdl/${{ matrix.project }}/tt_submission/*
            hdl/${{ matrix.project }}/info.yaml
            hdl/${{ matrix.project }}/LICENSE

  reharden-wokwi:
    strategy:
      fail-fast: false
      matrix:
        project:
          - tt_um_wokwi_group_11
          - tt_um_wokwi_group_12
          - tt_um_wokwi_group_13

    runs-on: ubuntu-24.04
    env:
      OPENLANE_IMAGE_OVERRIDE: htms/openlane2:ihp-v3.0.0.dev17
      PDK_ROOT: ${{ github.workspace }}/pdk
      PDK: ihp-sg13g2
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Checkout tt-support-tools repo
        uses: actions/checkout@v4
        with:
          repository: TinyTapeout/tt-support-tools
          path: wokwi/${{ matrix.project }}/tt
          ref: ttihp25a

      - name: Checkout IHP PDK repo
        uses: actions/checkout@v4
        with:
          repository: TinyTapeout/IHP-Open-PDK
          ref: tt2025
          path: pdk

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        working-directory: wokwi/${{ matrix.project }}
        run: |
          pip install -r tt/requirements.txt

      - name: Install OpenLane (IHP branch)
        shell: bash
        run: |
          pip install https://github.com/TinyTapeout/libparse-python/releases/download/0.3.1-dev1/libparse-0.3.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl
          pip install https://github.com/TinyTapeout/openlane2/releases/download/ihp-v3.0.0.dev17/openlane-3.0.0.dev17-py3-none-any.whl

      - name: Fetch verilog and build config
        working-directory: wokwi/${{ matrix.project }}
        shell: bash
        run: ./tt/tt_tool.py --create-user-config --ihp

      - name: Make GDS with OpenLane
        working-directory: wokwi/${{ matrix.project }}
        run: |
          git init
          # tt_tool requires a remote to be set, and some commit to be present
          git remote add origin https://github.com/TinyTapeout/dummy
          git config user.email "bot@github.com"
          git config user.name "Tiny Tapeout Bot"
          git commit --allow-empty -m "Dummy commit"

          python tt/tt_tool.py --create-user-config --harden --ihp

          # Fail if the final GDS file doesn't exist
          if [ ! -f "runs/wokwi/final/gds/${{ matrix.project }}.gds" ]; then
            exit 1
          fi

          # Fail is error.log isn't empty
          if [ -s "runs/wokwi/error.log" ]; then
            exit 1
          fi

      #- name: Publish build logs
      #  #if: failure()
      #  uses: actions/upload-artifact@v4
      #  with:
      #    name: GDS_${{ matrix.project }}
      #    path: |
      #      wokwi/${{ matrix.project }}/runs/*

      - name: Install KLayout
        shell: bash
        run: |
          wget https://github.com/TinyTapeout/klayout/releases/download/v0.29.11/klayout_0.29.11-1_amd64.deb
          sudo apt-get update && sudo apt-get install -y ./klayout_0.29.11-1_amd64.deb
          pip install klayout==0.29.11

      - name: Prepare tt_submission artifact
        working-directory: wokwi/${{ matrix.project }}
        shell: bash
        run: |
          mkdir -p tt_submission/stats
          TOP_MODULE=$(./tt/tt_tool.py --print-top-module --ihp)
          cp runs/wokwi/final/commit_id.json tt_submission/
          cp runs/wokwi/final/{gds,lef,spef/*}/${TOP_MODULE}.* tt_submission/
          strm2oas tt_submission/${TOP_MODULE}.gds tt_submission/${TOP_MODULE}.oas
          if [ "$PDK" == "sky130A" ]; then
            cp runs/wokwi/final/pnl/${TOP_MODULE}.pnl.v tt_submission/${TOP_MODULE}.v
          else
            cp runs/wokwi/final/nl/${TOP_MODULE}.nl.v tt_submission/${TOP_MODULE}.v
          fi
          cp runs/wokwi/{OPENLANE_VERSION,PDK_SOURCES,resolved.json} tt_submission/
          cp runs/wokwi/final/metrics.csv tt_submission/stats/metrics.csv
          cp runs/wokwi/*-yosys-synthesis/reports/stat.rpt tt_submission/stats/synthesis-stats.txt

      - name: Publish tt_submission artifact
        uses: actions/upload-artifact@v4
        with:
          name: tt_submission_${{ matrix.project }}
          path: |
            wokwi/${{ matrix.project }}/src/*
            wokwi/${{ matrix.project }}/docs/*
            wokwi/${{ matrix.project }}/tt_submission/*
            wokwi/${{ matrix.project }}/info.yaml
            wokwi/${{ matrix.project }}/LICENSE

